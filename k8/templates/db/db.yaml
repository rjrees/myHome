apiVersion: v1
kind: PersistentVolume
metadata:
  name: mariadb-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
    - ReadOnlyMany
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: /target/mariadb

---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mariadb-pvc
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: Pod
metadata:
  name: mariadb
spec:
  restartPolicy: Never
  volumes:
    - name: vol
      hostPath:
        path: /target/mariadb
  containers:
    - name: mariadb
      image: mariadb:latest
      #command: ['ps -ef']
      volumeMounts:
        - name: vol
          mountPath: /mariadb
      args:
        - sleep
        - "1000000"

---

apiVersion: v1
kind: Service
metadata:
  name: {{ template "mariadb.fullname" . }}
  labels:
    app: "{{ template "mariadb.name" . }}"
    component: "master"
    chart: "{{ template "mariadb.chart" . }}"
    release: {{ .Release.Name | quote }}
    heritage: {{ .Release.Service | quote }}
  {{- if .Values.metrics.enabled }}
annotations:
  {{ toYaml .Values.metrics.annotations | indent 4 }}
  {{- end }}
spec:
  type: {{ .Values.service.type }}
  {{- if eq .Values.service.type "ClusterIP" }}
  {{- if .Values.service.clusterIp }}
  clusterIP: {{ .Values.service.clusterIp }}
  {{- end }}
  {{- end }}
  ports:
    - name: mysql
      port: {{ .Values.service.port }}
      targetPort: mysql
  {{- if eq .Values.service.type "NodePort" }}
  {{- if .Values.service.nodePort }}
  {{- if .Values.service.nodePort.master }}
nodePort: {{ .Values.service.nodePort.master }}
  {{- end }}
  {{- end }}
  {{- end }}
  {{- if .Values.metrics.enabled }}
- name: metrics
  port: 9104
  targetPort: metrics
  {{- end }}
selector:
  app: "{{ template "mariadb.name" . }}"
  component: "master"
release: "{{ .Release.Name }}"

